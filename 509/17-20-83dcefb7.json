[
    {
        "question": "A que contenedores se pueden aplicar los recursos de estilos a través del archivothemeresources.xaml",
        "selected": "TextBlock y RichTextBlock",
        "answers": [
            "TextBlock y ComboBlock",
            "RichTextBlock y ComboBlock",
            "RichTextBlock y Button",
            "TextBlock y RichTextBlock",
            "TextBlock y ViewBlock"
        ]
    },
    {
        "question": "¿Cuál es el nombre de la etiqueta en la cual se definirán los recursos a utilizar en los XAML de nuestro proyecto? ",
        "selected": "<ResourceDictionary>",
        "answers": [
            "<Style>",
            "<Key>",
            "<ResourceDictionary>",
            "<Setter>",
            "<Property>"
        ]
    },
    {
        "question": "¿Cuál es el nombre del tipo de estilo en el cual podemos agregar en el archivo XAML tantos estilos como necesitamos?",
        "selected": "Explícito",
        "answers": [
            "Global",
            "Implícito",
            "Extendido",
            "Compacto",
            "Explícito"
        ]
    },
    {
        "question": "¿En qué generación aparece la itinerancia internacional (roaming)?",
        "selected": "2G",
        "answers": [
            "2G",
            "4G",
            "1G",
            "3G",
            "0G"
        ]
    },
    {
        "question": "¿Cuál de los siguientes Layouts se utiliza para colocar los elementos secundarios en una pila de forma horizontal o vertical según la propiedad Orientation?",
        "selected": "StackLayout",
        "answers": [
            "ContentPresenter",
            "Frame",
            "StackLayout",
            "TemplatedView",
            "ScrollView"
        ]
    },
    {
        "question": "¿Cuál de los siguientes Layouts es de contenido único?",
        "selected": "ScrollView",
        "answers": [
            "FlexLayout",
            "StackLayout",
            "Grid",
            "AbsoluteLayout",
            "ScrollView"
        ]
    },
    {
        "question": "Layouts, elementos no visuales destinados a controlar la distribución de los controles, ¿cuál de los siguientes elementos no es un objeto de tipo Layout?",
        "selected": "CheckBox",
        "answers": [
            "ListView",
            "GridView",
            "Gallery",
            "Spinner",
            "CheckBox"
        ]
    },
    {
        "question": "¿Cuál de las opciones se recomienda evitar el uso de este tipo de Layout?",
        "selected": "AbsoluteLayout",
        "answers": [
            "RelativeLayout",
            "AbsoluteLayout",
            "TableLayout",
            "AbsLayout",
            "LinearLayout"
        ]
    },
    {
        "question": "¿Cuál es el nombre de la propiedad de la instancia NavigationPage que proporciona acceso a la primera página de la pila de navegación?",
        "selected": "RootPage",
        "answers": [
            "ContentPage",
            "CaruselPage",
            "FlyoutPage",
            "RootPage",
            "TabbedPage"
        ]
    },
    {
        "question": "¿Cuál es el nombre de la primera página agregada a una pila de navegación de la aplicación?",
        "selected": "Raíz",
        "answers": [
            "Null",
            "Raíz",
            "Inicio",
            "Start",
            "Principal"
        ]
    },
    {
        "question": "¿En qué generación se deja de utilizar la conmutación basada en circuitos para voz?",
        "selected": "4G",
        "answers": [
            "2G",
            "4G",
            "3G",
            "0G",
            "1G"
        ]
    },
    {
        "question": "No es una diferencia entre View Binding y Data Binding",
        "selected": "Data Binding library nos proporciona Data Binding bidireccional, esta es una técnica para vincular sus objetos a diseños xml, de modo que tanto el objeto como el diseño puedan enviarse datos entre sí.",
        "answers": [
            "Data Binding library nos proporciona Binding Adapters.",
            "Data Binding library nos proporciona Data Binding bidireccional, esta es una técnica para vincular sus objetos a diseños xml, de modo que tanto el objeto como el diseño puedan enviarse datos entre sí.",
            "La única función de View Binding es vincular las vistas en el código. Mientras que Data Binding ofrece algunas opciones más como Binding Expressions, que nos permite escribir expresiones para conectar variables a las vistas en el diseño",
            "Data Binding library funciona con Observable Data objects, se tienes que actualizar la interfaz de usuario cuando cambian los datos subyacentes",
            "View Binding library es más rápida que Data Binding library, ya que no utiliza procesadores de anotación subyacentes, y cuando se trata de la velocidad del tiempo de compilación, la View Binding es más eficiente"
        ]
    },
    {
        "question": "¿Qué servicio permite trabajar con datos en especial cuando se trabaje con arreglos, matrices o base de datos?",
        "selected": "Content Providers",
        "answers": [
            "ExpandableListView",
            "Content Providers",
            "Resource Manager",
            "Views",
            "Activity Manager"
        ]
    },
    {
        "question": "¿Qué es Data Binding?",
        "selected": "Técnica de vincular las propiedades de dos objetos",
        "answers": [
            "Es un método para el diseño",
            "Es una clase de navegación",
            "Técnica para mostrar datos",
            "Técnica de vincular las propiedades de dos objetos",
            "Es una propiedad de estilo"
        ]
    },
    {
        "question": "¿Cuál es el nombre que se les da a los elementos de datos en un ListView?",
        "selected": "Lista",
        "answers": [
            "Punteros",
            "Celdas",
            "Cuerpo",
            "Nicho",
            "Lista"
        ]
    },
    {
        "question": "La clase ListView admite varios estilos de interacción, uno de ellos es",
        "selected": "Pull-to-refresh",
        "answers": [
            "Pull-to-refresh",
            "Context actions",
            "TextCell",
            "Built-in cells",
            "Selection"
        ]
    },
    {
        "question": "¿Cuáles son las secciones de los componentes de los ListView?",
        "selected": "Encabezado y pie de página, grupos y células",
        "answers": [
            "Grupos, células y secciones",
            "Grupos y células",
            "Encabezado y pie de página, secciones, columnas",
            "Encabezado y pie de página y grupos",
            "Encabezado y pie de página, grupos y células"
        ]
    },
    {
        "question": "Cuáles son los tipos de enlace de datos que muestra Data Binding",
        "selected": "Enlace unidireccional y bidireccional",
        "answers": [
            "Enlace unidireccional",
            "Enlace bidireccional y multidireccional",
            "Enlace bidireccional",
            "Enlace unidireccional y bidireccional",
            "Enlace unidireccional y multidireccional"
        ]
    },
    {
        "question": "No es una ventaja de Xamarin",
        "selected": "El desarrollo de aplicaciones lleva mucho tiempo",
        "answers": [
            "Admite Android, IOS y el sistema operativo Windows",
            "El desarrollo de aplicaciones lleva mucho tiempo",
            "No tiene limites",
            "Xamarin tiene su propio IDE",
            "Xamarin compila aplicaciones en forma nativa"
        ]
    },
    {
        "question": "¿Cuáles son las principales desventajas del uso de Xamarin?",
        "selected": "Desarrollar aplicaciones lleva mucho tiempo",
        "answers": [
            "Xamarin tiene su propio IDE",
            "Se centra principalmente en la interfaz del usuario y back-end",
            "Permite compartir fácilmente entre diferentes plataformas",
            "Menos cantidad de errores",
            "Desarrollar aplicaciones lleva mucho tiempo"
        ]
    }
]